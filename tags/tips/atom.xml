<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title> - tips</title>
    <link rel="self" type="application/atom+xml" href="https://blog.wavvel.com/tags/tips/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://blog.wavvel.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2021-09-18T00:00:25+07:00</updated>
    <id>https://blog.wavvel.com/tags/tips/atom.xml</id>
    <entry xml:lang="en">
        <title>Practical Programming Principles</title>
        <published>2021-09-18T00:00:25+07:00</published>
        <updated>2021-09-18T00:00:25+07:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.wavvel.com/posts/development-practices/practical-programming-principles/"/>
        <id>https://blog.wavvel.com/posts/development-practices/practical-programming-principles/</id>
        
        <content type="html" xml:base="https://blog.wavvel.com/posts/development-practices/practical-programming-principles/">&lt;p&gt;There are many programming paradigms, many approaches to code, new tools and frameworks, well things are moving fast üèé üí®!&lt;&#x2F;p&gt;
&lt;p&gt;I hope this post can be something to be held on when considering programming and development standard.
Usually the considerations will be useful when starting a new project, when there are arguments on
how to approach things in development,, which tool&#x2F;framework to use. Pick whatever you think is suitable for your project &amp;amp; team, take it with a grain of salt.&lt;&#x2F;p&gt;
&lt;p&gt;Having these principles in mind has helped my team to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Make programming decisions: how to structure code, how to handle errors.&lt;&#x2F;li&gt;
&lt;li&gt;Decide when should we opt-in for a hack and what&#x27;s the minimum proper way to apply a &amp;quot;quickfix&amp;quot;.&lt;&#x2F;li&gt;
&lt;li&gt;Decide when to invest more in documentations.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;readability&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#readability&quot; aria-label=&quot;Anchor link for: readability&quot;&gt;#&lt;&#x2F;a&gt;
Readability&lt;&#x2F;h3&gt;
&lt;p&gt;Readability means it&#x27;s easy to understand, not just easy to read. &lt;code&gt;Easy to understand&lt;&#x2F;code&gt; meaning might vary
because each company&#x2F;team has different engineering skills standard due to different skillset requirements as well. Having a readability standard set earlier will boost
team productivity in the longer run, it&#x27;ll cut communication cost, reduce the time needed to understand the code, hence improve the team onboarding process.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;readability-statically-typed-language&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#readability-statically-typed-language&quot; aria-label=&quot;Anchor link for: readability-statically-typed-language&quot;&gt;#&lt;&#x2F;a&gt;
[Readability] Statically typed language&lt;&#x2F;h5&gt;
&lt;p&gt;It might be worth the investment to use statically typed language. Code is meant to be read more than it is written,
static typing will improve readability. The compiler will help you eliminate most of the compile-time type errors, which will simplify code reviews, unit testing.
you don&#x27;t need to test data type unless your project requires you to do a lot of runtime type checking, too many runtime checking could be be sign of another problem though (depending on project goals).&lt;&#x2F;p&gt;
&lt;h5 id=&quot;readability-invest-in-code-comments&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#readability-invest-in-code-comments&quot; aria-label=&quot;Anchor link for: readability-invest-in-code-comments&quot;&gt;#&lt;&#x2F;a&gt;
[Readability] Invest in code comments&lt;&#x2F;h5&gt;
&lt;p&gt;Code comments can be used to explain &amp;quot;why&amp;quot; certain logic is set that way, this will cut communication cost and make debugging a lot easier.
The goal is to help your peers and &amp;quot;future you&amp;quot; to understand the code either in code review or when we want to revisit the code in the future. Cases where code comment is beneficial:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Complex logic.&lt;&#x2F;li&gt;
&lt;li&gt;Motivation regarding unorthodox approach.&lt;&#x2F;li&gt;
&lt;li&gt;Hack&#x2F;quick fix, this would reduce confusion a lot and make it explicit that the approach that&#x27;s considered a &amp;quot;hack&amp;quot; is intended.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h5 id=&quot;readability-standard-on-variable-names&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#readability-standard-on-variable-names&quot; aria-label=&quot;Anchor link for: readability-standard-on-variable-names&quot;&gt;#&lt;&#x2F;a&gt;
[Readability] Standard on variable names&lt;&#x2F;h5&gt;
&lt;p&gt;Set an acceptable standard of explicitness with your team.
One of the most obvious example is to agree on how to name variables.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Use plural for list, vector or array type.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;let emails: Vec&amp;lt;String&amp;gt;;
let users: Vec&amp;lt;User&amp;gt;;
let people: Vec&amp;lt;Person&amp;gt;;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;{value}_by_{type}&lt;&#x2F;code&gt; naming pattern for key-value data structure (hashmap, btreemap, dictionary, etc)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&amp;#x2F;&amp;#x2F; You&amp;#x27;ll get a user given an email
let userByEmail: HashMap&amp;lt;String, User&amp;gt;;

&amp;#x2F;&amp;#x2F; You&amp;#x27;ll get users given a name, maybe you&amp;#x27;re grouping users by their first name
let usersByFirstName: HashMap&amp;lt;String, Vec&amp;lt;User&amp;gt;&amp;gt;;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h5 id=&quot;readability-limit-on-maximum-number-of-characters-per-line&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#readability-limit-on-maximum-number-of-characters-per-line&quot; aria-label=&quot;Anchor link for: readability-limit-on-maximum-number-of-characters-per-line&quot;&gt;#&lt;&#x2F;a&gt;
[Readability] Limit on maximum number of characters per line.&lt;&#x2F;h5&gt;
&lt;p&gt;Imagine you&#x27;re reading a book, you need to scroll both vertically &amp;amp; horizontally
to read a paragraph because there&#x27;s no maximum number of characters per line,
would it be a good user experience? The same goes for writing code, imagine a line of code
that you need to scroll both directions a lot, wouldn&#x27;t it be easier to just scroll vertically?&lt;&#x2F;p&gt;
&lt;h3 id=&quot;modularity&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#modularity&quot; aria-label=&quot;Anchor link for: modularity&quot;&gt;#&lt;&#x2F;a&gt;
Modularity&lt;&#x2F;h3&gt;
&lt;p&gt;Modular means it&#x27;s easy to plug &amp;amp; change something because there&#x27;s a &lt;em&gt;balanced abstraction&lt;&#x2F;em&gt;. Note that in practice, you do not have to abstract everything,
too much abstraction would be make it less readable and harder to understand. It
would make the most sense to put abstraction on top of something that would likely to change or
something that already has&#x2F;will have multiple implementations.&lt;&#x2F;p&gt;
&lt;p&gt;One easy example: suppose we want to send
SMS(maybe for MFA use cases - OTP) to our users, putting an interface on top of the actual vendor
implementation might be a good idea, why? Let&#x27;s start with the business use case, MFA is a critical security feature, having a good OTP delivery rate is crucial for the user experience, we
can&#x27;t rely only to 1 vendor, it&#x27;s important to have at least another SMS vendor backup in case the the primary vendor is down or there are other problems (latency drops or the delivery rate drops).
If we put an interface for it, it&#x27;s easy to switch. The switch strategy might vary, it could be via a circuit breaker mechanism or just a simple remote config to decide which SMS vendor to use.
A bit intermezzo, use &lt;a href=&quot;https:&#x2F;&#x2F;jumpcloud.com&#x2F;blog&#x2F;totp-sms-2fa&quot;&gt;TOTP might be more secure than OTP&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s a signal that you could use to measure modularity, if it&#x27;s &lt;em&gt;relatively easy&lt;&#x2F;em&gt;
to write unit tests then most probably your code is modular enough because it&#x27;s easy
to inject dependencies (mock objects in unit test context) and hence will make it easier to refactor things if needed.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;error-handling&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#error-handling&quot; aria-label=&quot;Anchor link for: error-handling&quot;&gt;#&lt;&#x2F;a&gt;
Error Handling&lt;&#x2F;h3&gt;
&lt;p&gt;Software breaks all the time, preferably you want to be able to spot errors before your users do.
When you got error reports you also want to be able to debug it.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;error-handling-observability&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#error-handling-observability&quot; aria-label=&quot;Anchor link for: error-handling-observability&quot;&gt;#&lt;&#x2F;a&gt;
[Error Handling] Observability&lt;&#x2F;h4&gt;
&lt;p&gt;Make sure errors do not go into limbo, you want to be able to plot and gauge error rates over time.
It should be easy to spot as well.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;How easy is it to be alerted when there are errors?&lt;&#x2F;li&gt;
&lt;li&gt;Can you see the error logs? How easy is it to see it?&lt;&#x2F;li&gt;
&lt;li&gt;Do we have a clear separation on what&#x27;s considered an error? Do not log informational messages as error&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;error-handling-debuggability&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#error-handling-debuggability&quot; aria-label=&quot;Anchor link for: error-handling-debuggability&quot;&gt;#&lt;&#x2F;a&gt;
[Error Handling] Debuggability&lt;&#x2F;h4&gt;
&lt;p&gt;The easier it is to debug the error, the faster it is to resolve the problem, your time should be spent
mostly on building products&#x2F;software instead of debugging.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the key points to measure your debuggability:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;How easy is it to prioritize errors? We should be able to separate errors by their severity, errors that block users to complete payment should be more important than errors related to the feature to change the username.&lt;&#x2F;li&gt;
&lt;li&gt;Error message, do we construct meaningful error messages? or is it just printing &lt;code&gt;&amp;quot;System Error&amp;quot;&lt;&#x2F;code&gt;?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Engineering Lead - Achieving Team Goals</title>
        <published>2021-02-23T20:00:00+07:00</published>
        <updated>2021-02-23T20:00:00+07:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.wavvel.com/posts/team/engineering-lead-achieving-team-goals/"/>
        <id>https://blog.wavvel.com/posts/team/engineering-lead-achieving-team-goals/</id>
        
        <content type="html" xml:base="https://blog.wavvel.com/posts/team/engineering-lead-achieving-team-goals/">&lt;p&gt;Some people (or most people) might find the stress level going up in respect with the uncertainty of success in this people management role.
It is important to keep in mind that &lt;b&gt;your performance is not evaluated based on your &lt;em&gt;individual contributions&lt;&#x2F;em&gt; but the &lt;em&gt;team contributions&lt;&#x2F;em&gt;&lt;&#x2F;b&gt;,
it&#x27;s not your performance anymore, &lt;b&gt;it&#x27;s &lt;em&gt;the team performance&lt;&#x2F;em&gt;&lt;&#x2F;b&gt;! In general, team performance will be tied to team achievements&#x2F;goals completion.&lt;&#x2F;p&gt;
&lt;p&gt;This post is based on my personal experiences &amp;amp; past mistakes, please take it with a grain of salt.
The post will be focusing on tips to achieve your team goals, other perspectives (dealing with stress, challenging your team, growing your teammember, etc2) will be in another posts.
Your mileage may vary depending on the expectation of your company&#x2F;employer.&lt;&#x2F;p&gt;
&lt;h6 id=&quot;make-sure-the-team-is-aligned-with-company-goals&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#make-sure-the-team-is-aligned-with-company-goals&quot; aria-label=&quot;Anchor link for: make-sure-the-team-is-aligned-with-company-goals&quot;&gt;#&lt;&#x2F;a&gt;
Make sure the team is aligned with company goals&lt;&#x2F;h6&gt;
&lt;p&gt;In short, you need to communicate clearly what needs to be done, in my case, we&#x27;re using OKR and use the tool to align with the company goals (by deriving the department&#x27;s OKR), then we&#x27;ll iterate the team OKR together one by one with things to be checked:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Each goal must have at least a PIC. If it&#x27;s not set yet: the earlier you visit this section will result in less uncertainty.&lt;&#x2F;li&gt;
&lt;li&gt;Each PIC must understand the goal and why they&#x27;re doing it, this is to build the base motivation and get the buy-in from the PIC.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h6 id=&quot;plan-ahead&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#plan-ahead&quot; aria-label=&quot;Anchor link for: plan-ahead&quot;&gt;#&lt;&#x2F;a&gt;
Plan ahead&lt;&#x2F;h6&gt;
&lt;p&gt;Your team have goals, what&#x27;s next? &lt;b&gt;&lt;em&gt;Planning&lt;&#x2F;em&gt;&lt;&#x2F;b&gt;, why &lt;em&gt;planning&lt;&#x2F;em&gt; is important? I think I can use British Army&#x27;s &lt;em&gt;7Ps&lt;&#x2F;em&gt; to explain why: &lt;code&gt;Proper Planning and Preparation Prevents Piss Poor Performance&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;There are several key points that I always keep in my mental notes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Describe the background why we&#x27;re aiming for a specific goal, you can use a top-bottom model to lower barrier of entry in your plan.&lt;&#x2F;li&gt;
&lt;li&gt;Make sure the PIC understand the details of the plan by planning together, you make the team owns the plan by planning together instead of by yourself.&lt;&#x2F;li&gt;
&lt;li&gt;Write the plan in a sharable-docs (we use google docs).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Remember to open the opportunity for team members (brave souls ü§û) to let them lead the planning and guide if needed, everyone
should be able to plan ahead, it&#x27;s a general skill that will be useful in life.&lt;&#x2F;p&gt;
&lt;h6 id=&quot;communicate-the-plan-gather-feedback&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#communicate-the-plan-gather-feedback&quot; aria-label=&quot;Anchor link for: communicate-the-plan-gather-feedback&quot;&gt;#&lt;&#x2F;a&gt;
Communicate the plan &amp;amp; gather feedback&lt;&#x2F;h6&gt;
&lt;p&gt;Your team goals have stakeholders, be it upper management, product team, marketing team, etc2. Communicate the plan to stakeholders &amp;amp; gather feedback,
you can do this by setting up a meeting or &lt;em&gt;possibly&lt;&#x2F;em&gt; just via email if the goal is small-medium size (in my case it&#x27;s usually &amp;lt; 1 week of work).&lt;&#x2F;p&gt;
&lt;h6 id=&quot;split-the-work-after-the-plan-is-approved&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#split-the-work-after-the-plan-is-approved&quot; aria-label=&quot;Anchor link for: split-the-work-after-the-plan-is-approved&quot;&gt;#&lt;&#x2F;a&gt;
Split the work after the plan is approved&lt;&#x2F;h6&gt;
&lt;p&gt;At this step you need to split the tasks according to the plan and distribute the work across your team members or other team(s).
You can use software for subtasking or just use excel should be ok as long as it&#x27;s clear.&lt;&#x2F;p&gt;
&lt;h6 id=&quot;eggggggggggxecute-and-reporting&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#eggggggggggxecute-and-reporting&quot; aria-label=&quot;Anchor link for: eggggggggggxecute-and-reporting&quot;&gt;#&lt;&#x2F;a&gt;
Eggggggggggxecute and reporting&lt;&#x2F;h6&gt;
&lt;p&gt;This is the grinding part, the PIC will execute the plan and team lead is expected to &amp;quot;guard&amp;quot; the execution a.k.a make sure it&#x27;s done properly, be ready to get your hands dirty as well, remember to unblock your team member.
Let the PIC know explicitly that there might be changes along the road, just remember to revise the plan &amp;amp; report back to stakeholders.&lt;&#x2F;p&gt;
&lt;p&gt;There are 3 kind of reports that I usually find myself do:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Official reporting regarding the project, it depends on your stakeholders, updating the progress in your plan documentation and send the TLDR version via email should be enough in most cases.&lt;&#x2F;li&gt;
&lt;li&gt;Weekly reporting to my manager, this report contains the overall projects progress (achievements&#x2F;other important highlights) running within the team.&lt;&#x2F;li&gt;
&lt;li&gt;[Optional] Most of the time it&#x27;s a good idea to setup a specific slack channel (or just use whatever software your company use) for medium-high complexity project and let stakeholders to decide whether they want to join the channel or not,
this channel should be useful for organizing chats &amp;amp; discussions scoping.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h6 id=&quot;the-fun-and-the-ugly-part&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-fun-and-the-ugly-part&quot; aria-label=&quot;Anchor link for: the-fun-and-the-ugly-part&quot;&gt;#&lt;&#x2F;a&gt;
The fun and the ugly part&lt;&#x2F;h6&gt;
&lt;p&gt;&lt;b&gt;Mission completed?&lt;&#x2F;b&gt; Make sure you give credit where credit is due, credit the PIC, team members and other parties that contribute to the project.
Have celebration then focus on the next goal.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;The ugly part: mission failed.&lt;&#x2F;b&gt; In this case &lt;em&gt;you take the responsibility&lt;&#x2F;em&gt;. Yes, the team lead is responsible for the project, even though you should held people accountable.
Just like a CEO is responsible for the overall success of a company, team lead is responsible for the overall success of a team.
In most cases your manager will require a report of what failed and what can be improved. Take it as a learning to get better! You can do it together with your team, remember to back-up each other!&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The basic principle to keep in mind: &lt;b&gt;if you fail then you get up together with the team and improve&lt;&#x2F;b&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Partnership System Integration Tips</title>
        <published>2020-08-22T00:00:00+07:00</published>
        <updated>2020-08-22T00:00:00+07:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.wavvel.com/posts/development-practices/partnership-system-integration-tips/"/>
        <id>https://blog.wavvel.com/posts/development-practices/partnership-system-integration-tips/</id>
        
        <content type="html" xml:base="https://blog.wavvel.com/posts/development-practices/partnership-system-integration-tips/">&lt;p&gt;Recently we just had intense integrations with our business partners.
We have a whitelabel product where registered whitelabel partners can use our core engine
and put their brand as the label.&lt;&#x2F;p&gt;
&lt;p class=&quot;image-container&quot;&gt;
  &lt;img
    src=&quot;https:&#x2F;&#x2F;images.unsplash.com&#x2F;photo-1556484687-30636164638b?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1567&amp;q=80&quot;
  &gt;
&lt;&#x2F;p&gt;
&lt;p&gt;The development was very intense because there are some parts that need to be customized
for each partners and some of the APIs are not even 100% finished yet. We do the development both ways,
partners also allocated engineering resource on their side to help with the integration.
During this intense moment, we made some mistakes, both engineering related and non engineering.&lt;&#x2F;p&gt;
&lt;p&gt;This post is about the lessons&#x2F;key takeaways from the experience.
I&#x27;ll update the post regularly as the learning process continues, stay tuned!&lt;&#x2F;p&gt;
&lt;hr&gt;
&lt;h5 id=&quot;unix-timestamp-for-all-datetime-api-parameters&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#unix-timestamp-for-all-datetime-api-parameters&quot; aria-label=&quot;Anchor link for: unix-timestamp-for-all-datetime-api-parameters&quot;&gt;#&lt;&#x2F;a&gt;
Unix timestamp for all datetime API parameters&lt;&#x2F;h5&gt;
&lt;p&gt;As of now we&#x27;re using &lt;a href=&quot;https:&#x2F;&#x2F;www.iso.org&#x2F;iso-8601-date-and-time-format.html&quot;&gt;iso datetime format&lt;&#x2F;a&gt;
for datetime fields, it&#x27;s very likely that your API clients are using a different
programming language &#x2F; library and the tool that they choose is going to behave differently.
At the end unixtimestamp is the most general way to pass datetime data.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;snake-case-instead-of-camelcase-for-api-fields&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#snake-case-instead-of-camelcase-for-api-fields&quot; aria-label=&quot;Anchor link for: snake-case-instead-of-camelcase-for-api-fields&quot;&gt;#&lt;&#x2F;a&gt;
snake_case instead of camelCase for API fields&lt;&#x2F;h5&gt;
&lt;p&gt;We had multiple integration problems when partners had typo. Let&#x27;s face it,
everyone has this experience where you mistype the &lt;code&gt;camelCase&lt;&#x2F;code&gt; format,
e.g. &lt;code&gt;someField&lt;&#x2F;code&gt; -&amp;gt; &lt;code&gt;somefield&lt;&#x2F;code&gt;. Using &lt;code&gt;snake_case&lt;&#x2F;code&gt; should reduce the possibility
of the problem thus would save your client&#x27;s time and your time when doing integration.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;use-sprint-as-the-development-estimation-time-unit&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#use-sprint-as-the-development-estimation-time-unit&quot; aria-label=&quot;Anchor link for: use-sprint-as-the-development-estimation-time-unit&quot;&gt;#&lt;&#x2F;a&gt;
Use &amp;quot;sprint&amp;quot; as the development estimation time unit&lt;&#x2F;h5&gt;
&lt;p&gt;There will be times where both parties agrees on to develop new features, depending on the urgency,
if it&#x27;s a &lt;b&gt;&lt;em&gt;not a critical&lt;&#x2F;em&gt;&lt;&#x2F;b&gt; feature then I&#x27;d advise to always use &lt;code&gt;n&lt;&#x2F;code&gt; sprint as the time estimation.
The new non-critical feature takes 4 hours to complete? Set the estimation to 1 sprint,
if it takes &amp;gt; 50% of sprint points then say it takes 2 sprints. Development is not just
about code-complete, it&#x27;s about delivering the features that meet the expectation
with minimum bugs and 0 critical bug, probably you need to update your API docs too.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;handling-major-changes-decisions&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#handling-major-changes-decisions&quot; aria-label=&quot;Anchor link for: handling-major-changes-decisions&quot;&gt;#&lt;&#x2F;a&gt;
Handling major changes&#x2F;decisions&lt;&#x2F;h5&gt;
&lt;p&gt;Make sure major changes&#x2F;decisions will be discussed internally first, there will be different
point of views, from product, UI&#x2F;UX, engineering. Anything related to the major decisions should be answered with &lt;code&gt;Let us discuss internally first, we&#x27;ll get back to you by X day(s)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h5 id=&quot;remember-it-s-a-partnership&quot;&gt;&lt;!-- Customize https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;components&#x2F;templates&#x2F;src&#x2F;builtins&#x2F;anchor-link.html --&gt;
&lt;a class=&quot;zola-anchor&quot; href=&quot;#remember-it-s-a-partnership&quot; aria-label=&quot;Anchor link for: remember-it-s-a-partnership&quot;&gt;#&lt;&#x2F;a&gt;
Remember, it&#x27;s a partnership&lt;&#x2F;h5&gt;
&lt;p&gt;This is a partnership, it&#x27;s a relationship where we will work together as a partner for
mutual benefits, it&#x27;s not a stage to throw mistakes, it&#x27;s a stage to perform together
and achieve great things together. Having this mindset will help your emotion and stress level in check.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
